import telebot
from telebot import types
import random
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
questions = [
    {"sentence": "She ___ to school every day.", "answer": "goes"},
    {"sentence": "They ___ football right now.", "answer": "are playing"},
    {"sentence": "He ___ his homework yesterday.", "answer": "did"},
    {"sentence": "I ___ call you tomorrow.", "answer": "will"},
    {"sentence": "We ___ already finished the project.", "answer": "have"}
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
def determine_level(correct_answers, total_questions):
    percentage = (correct_answers / total_questions) * 100

    if percentage >= 80:  # 4/5 –∏–ª–∏ 5/5
        return "B1-B2"
    elif percentage >= 60:  # 3/5
        return "A2"
    elif percentage >= 40:  # 2/5
        return "A1"
    else:  # 1/5 –∏–ª–∏ 0/5
        return "A0"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("üöÄ–°—Ç–∞—Ä—Ç")
    action_button = types.KeyboardButton("–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç‚õ∞Ô∏è")
    markup.add(start_button, action_button)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç‚úåÔ∏è, {message.from_user.first_name} \n–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏!", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=["text"])
def buttons(message):
    if message.text == "üöÄ–°—Ç–∞—Ä—Ç":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º –ø—É–Ω–∫—Ç–æ–≤
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        level_button = types.KeyboardButton("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—èüíØ")
        words_button = types.KeyboardButton("–ù–æ–≤—ã–µ —Å–ª–æ–≤–∞üìó")
        rules_button = types.KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞üí¨")
        markup.add(level_button, words_button, rules_button)
        bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ, –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –ø—É–Ω–∫—Ç!", reply_markup=markup)

    elif message.text == "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç‚õ∞Ô∏è":
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç
        compliments = [
            "–¢—ã –≤—ã–≥–ª—è–¥–∏—à—å –ø–æ—Ç—Ä—è—Å–∞—é—â–µ!",
            "–¢—ã —É–º–Ω–µ–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—å!",
            "–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä –ª—É—á—à–µ!",
            "–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –≥–µ—Ä–æ–π!",
            "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å!"
        ]
        bot.send_message(message.chat.id, text=f"{random.choice(compliments)}")

    elif message.text == "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—èüíØ":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        start_test_button = types.KeyboardButton("–ù–∞—á–∞—Ç—å –¢–µ—Å—Çüôã")
        back_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥üÜò")
        markup.add(start_test_button, back_button)
        bot.send_message(message.chat.id, "–ù–∞—á–Ω–µ–º —Ç–µ—Å—Ç! –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω!", reply_markup=markup)

    elif message.text == "–ù–∞—á–∞—Ç—å –¢–µ—Å—Çüôã":
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data[message.chat.id] = {
            "current_question": 0,
            "correct_answers": 0,
            "questions": questions
        }
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        question = user_data[message.chat.id]["questions"][0]
        bot.send_message(message.chat.id, question["sentence"])

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥üÜò":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        start_button = types.KeyboardButton("üöÄ–°—Ç–∞—Ä—Ç")
        action_button = types.KeyboardButton("–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç‚õ∞Ô∏è")
        markup.add(start_button, action_button)
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!", reply_markup=markup)

    elif message.chat.id in user_data:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∞
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        current_question = user_data[message.chat.id]["current_question"]
        question = user_data[message.chat.id]["questions"][current_question]

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
        if message.text.lower() == question["answer"].lower():
            user_data[message.chat.id]["correct_answers"] += 1
            bot.send_message(message.chat.id, "–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ")
        else:
            bot.send_message(message.chat.id, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {question['answer']}")

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        user_data[message.chat.id]["current_question"] += 1
        if user_data[message.chat.id]["current_question"] < len(user_data[message.chat.id]["questions"]):
            next_question = user_data[message.chat.id]["questions"][user_data[message.chat.id]["current_question"]]
            bot.send_message(message.chat.id, next_question["sentence"])
        else:
            # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
            correct_answers = user_data[message.chat.id]["correct_answers"]
            total_questions = len(user_data[message.chat.id]["questions"])

            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
            level = determine_level(correct_answers, total_questions)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            bot.send_message(message.chat.id, f"–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {correct_answers}/{total_questions}")
            bot.send_message(message.chat.id, f"–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ: {level}")

            # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            del user_data[message.chat.id]

    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        bot.send_message(message.chat.id, "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)