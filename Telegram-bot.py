import telebot
from telebot import types
import random
from compliment import compliments
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

words = [
    {"word": "apple", "translation": "—è–±–ª–æ–∫–æ", "transcription": "[Àà√¶p…ôl]"},
    {"word": "book", "translation": "–∫–Ω–∏–≥–∞", "transcription": "[b äk]"},
    {"word": "cat", "translation": "–∫–æ—Ç", "transcription": "[k√¶t]"},
    {"word": "dog", "translation": "—Å–æ–±–∞–∫–∞", "transcription": "[d…í…°]"},
    {"word": "elephant", "translation": "—Å–ª–æ–Ω", "transcription": "[Àà…õl…™f…ônt]"},
    {"word": "flower", "translation": "—Ü–≤–µ—Ç–æ–∫", "transcription": "[Ààfla ä…ôr]"},
    {"word": "guitar", "translation": "–≥–∏—Ç–∞—Ä–∞", "transcription": "[…°…™Ààt…ëÀêr]"},
    {"word": "house", "translation": "–¥–æ–º", "transcription": "[ha äs]"},
    {"word": "island", "translation": "–æ—Å—Ç—Ä–æ–≤", "transcription": "[Ààa…™l…ônd]"},
    {"word": "jungle", "translation": "–¥–∂—É–Ω–≥–ª–∏", "transcription": "[Ààd í å≈ã…°…ôl]"}
]

# –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤
used_words = []

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è 5 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤
def get_random_words(word_list, num_words=5):
    available_words = [word for word in word_list if word not in used_words]
    if len(available_words) < num_words:
        return None
    selected_words = random.sample(available_words, num_words)
    used_words.extend(selected_words)
    return selected_words

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = types.KeyboardButton("üöÄ–°—Ç–∞—Ä—Ç")
    action_button = types.KeyboardButton("–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç‚õ∞Ô∏è")
    markup.add(start_button, action_button)
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç‚úåÔ∏è, {message.from_user.first_name} \n–í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏!", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=["text"])
def buttons(message):
    if message.text == "üöÄ–°—Ç–∞—Ä—Ç":
        bot.send_message(message.chat.id, text="–•–æ—Ä–æ—à–æ, –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –ø—É–Ω–∫—Ç! \n1.–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—èüíØ \n2.–ù–æ–≤—ã–µ —Å–ª–æ–≤–∞üìó \n3.–ü—Ä–∞–≤–∏–ª–∞üí¨")
    elif message.text == "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç‚õ∞Ô∏è":
        bot.send_message(message.chat.id, text=f"{random.choice(compliments)}")
    elif message.text == "–ù–æ–≤—ã–µ —Å–ª–æ–≤–∞üìó":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        start_test_button = types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å 5 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤üôã")
        back_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥üÜò")
        markup.add(start_test_button, back_button)
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 5 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤!", reply_markup=markup)
    elif message.text == "–ü–æ–ª—É—á–∏—Ç—å 5 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤üôã":
        random_words = get_random_words(words)
        if random_words:
            response = "–í–æ—Ç 5 –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:\n\n"
            for word in random_words:
                response += f"–°–ª–æ–≤–æ: {word['word']}\n–ü–µ—Ä–µ–≤–æ–¥: {word['translation']}\n–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: {word['transcription']}\n\n"
            bot.send_message(message.chat.id, response)
        else:
            bot.send_message(message.chat.id, "–°–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –ñ–¥–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è!")
    else:
        bot.send_message(message.chat.id, text="–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)